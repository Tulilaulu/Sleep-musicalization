"""
This file was written by Aurora Tulilaulu and it is a part of the sleep musicalization project at http://sleepmusicalization.net/

This work is licensed under the Creative Commons Attribution-NonCommercial 3.0 Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc/3.0/ or send a letter to Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.

This file stores the hand written probabilities for things and also getters for them.
"""
import random

#step = [0, 100, -100, 200, -200]
#skip = [300, -300, 400, -400, 500, -500, 600, -600, 700, -700, 800, -800, 900, -900, 1000, -1000, 1100, -1100, 1200, -1200]

notes = { #tweaking these has big effects on the melody
0 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.525, 300],[0.55, -300],[0.575, 400],[0.6, -400],[0.625, 500],[0.65, -500],[0.675, 600],[0.7, -600],[0.725, 700],[0.75, -700],[0.775, 800],[0.8, -800],[0.825, 900],[0.85, -900],[0.875, 1000],[0.9, -1000],[0.925, 1100],[0.95, -1100],[0.975, 1200],[1, -1200]], #all possibilities, more steps than skips
100 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.525, 300],[0.55, -300],[0.575, 400],[0.6, -400],[0.625, 500],[0.65, -500],[0.675, 600],[0.7, -600],[0.725, 700],[0.75, -700],[0.775, 800],[0.8, -800],[0.825, 900],[0.85, -900],[0.875, 1000],[0.9, -1000],[0.925, 1100],[0.95, -1100],[0.975, 1200],[1, -1200]], #all possibilities, more steps than skips
-100 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.525, 300],[0.55, -300],[0.575, 400],[0.6, -400],[0.625, 500],[0.65, -500],[0.675, 600],[0.7, -600],[0.725, 700],[0.75, -700],[0.775, 800],[0.8, -800],[0.825, 900],[0.85, -900],[0.875, 1000],[0.9, -1000],[0.925, 1100],[0.95, -1100],[0.975, 1200],[1, -1200]], #all possibilities, more steps than skips
200 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.525, 300],[0.55, -300],[0.575, 400],[0.6, -400],[0.625, 500],[0.65, -500],[0.675, 600],[0.7, -600],[0.725, 700],[0.75, -700],[0.775, 800],[0.8, -800],[0.825, 900],[0.85, -900],[0.875, 1000],[0.9, -1000],[0.925, 1100],[0.95, -1100],[0.975, 1200],[1, -1200]], #all possibilities, more steps than skips
-200 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.525, 300],[0.55, -300],[0.575, 400],[0.6, -400],[0.625, 500],[0.65, -500],[0.675, 600],[0.7, -600],[0.725, 700],[0.75, -700],[0.775, 800],[0.8, -800],[0.825, 900],[0.85, -900],[0.875, 1000],[0.9, -1000],[0.925, 1100],[0.95, -1100],[0.975, 1200],[1, -1200]], #all possibilities, more steps than skips
300 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-300 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
400 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-400 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
500 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-500 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
600 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-600 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
700 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-700 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
800 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-800 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
900 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, -300],[0.6, -400],[0.65, -500],[0.7, -600],[0.75, -700],[0.8, -800],[0.85, -900],[0.9, -1000],[0.95, -1100],[1, -1200]],
-900 : [[0.1, 0],[0.2, 100],[0.3, -100],[0.4, 200],[0.5, -200],[0.55, 300],[0.6, 400],[0.65, 500],[0.7, 600],[0.75, 700],[0.8, 800],[0.85, 900],[0.9, 1000],[0.95, 1100],[1, 1200]],
1000 : [[0.3, 0],[0.45, -100],[0.7, -200],[0.8, -300],[0.9, -400],[1, -500]],
-1000 : [[0.3, 0],[0.45, 100],[0.7, 200],[0.8, 300],[0.9, 400],[1, 500]],
1100 : [[0.3, 0],[0.45, -100],[0.7, -200],[0.8, -300],[0.9, -400],[1, -500]],
-1100 : [[0.3, 0],[0.45, 100],[0.7, 200],[0.8, 300],[0.9, 400],[1, 500]],
1200 : [[0.3, 0],[0.45, -100],[0.7, -200],[0.8, -300],[0.9, -400],[1, -500]],
-1200 : [[0.3, 0],[0.45, 100],[0.7, 200],[0.8, 300],[0.9, 400],[1, 500]],
"exception" : [[0.2, 0],[0.4, 100],[0.6, -100],[0.8, 200],[1, -200]], #just in case
}
rythm = { #must be from smallest to biggest
0.25 : [[0.5, 0.25],[0.7, 0.5],[1, 1]],
0.5 : [[0.2, 0.25],[0.7, 0.5],[0.9,1],[1, 1.5]],
1 : [[0.1, 0.25],[0.2, 0.5],[0.6, 1],[0.7, 1.5],[0.9, 2], [1,4]],
1.5 : [[0.4, 0.5],[0.6, 1.5],[0.7, 2], [0.9, 1], [1, 2]],
2 : [[0.3, 0.5],[0.92, 1], [1,4]],
4 : [[1, 1]],
"exception" : [[0.2, 0.25],[0.4, 0.5],[0.6, 1],[0.8, 1.5],[0.9, 2], [1,4]], #problem?
}
chords = { #soituasteet = luku+1
"0" : [[0.1, 0],[0.2, 1], [0.3, 2], [0.5, 3], [0.8, 4], [0.9, 5], [1.0, 6]], #syntax is [chord] : optionarray with [prob, chord]
"1" : [[0.4, 0], [0.6, 1], [0.7, 3], [1.0, 4]],
"2" : [[0.1, 0], [0.2, 1], [0.3, 2], [0.6, 3], [0.9, 4], [1.0, 6]],
"3" : [[0.3, 0], [0.4, 2], [0.6, 3], [1.0, 4]],
"4" : [[0.5, 0], [0.7, 3], [0.9, 5], [1.0, 6]],
"5" : [[0.2, 0], [0.4, 3], [0.7, 4], [0.8, 5], [1.0, 6]],
"6" : [[1.0, 0]],
"0, 3": [[0.2, 3], [0.3, 0], [1.0, 4]],
"3, 4": [[0.2, 4], [0.3, 3], [1.0, 0]],
"4, 4": [[0.2, 3], [1.0, 0]],
"0, 1": [[0.3, 0], [1.0, 2]],
"6, 6": [[1.0, 0]],
"0, 5": [[0.2, 0], [0.9, 4], [1.0, 3]],
"exeption" : [1.1, 0],
}
def getInterval(last):
	try:
		p = notes[last]
	except Exception:
		p = chords["exception"]	
	i = random.randrange(0, 100)
	i = float(i)/100
	for k in p:
		if (i < k[0]): #toimii kertymatodennakoisyydella
			return k[1]
	return -1 #error

def getChord(last, secondLast = None): #can be given either one last chord or two
	try:
		p = chords[str(secondLast)+", "+str(last)]
	except Exception:
		try: 
			p = chords[str(last)]
		except Exception:
			p = chords["exception"]	
	i = random.randrange(0, 100)
	i = float(i)/100
	for k in p:
		if (i < k[0]): #toimii kertymatodennakoisyydella
			return k[1]
	return -1 #error
def getRProb(modifier):
	a = float(random.randrange(0, 100))/100
	if (modifier < 50):#balance toward longer notes
		a = a + 0.05
	if (modifier < 40):
		a = a + 0.05
	if (modifier > 70):#balance toward shorter notes
		a = a - 0.05
	if (modifier > 85):
		a = a - 0.05
	if (a >= 1): #dont go over
		a = 0.99	
	return a
def getRythm(spaceleft, last, IHRrate = 60):
	try :
	    p = rythm[last]
	except Exception:
	    p = rythm["exception"]
	if (spaceleft < 2.5):
		return spaceleft
	i = getRProb(IHRrate)
	for a in range(0,4):
		for k in p:
			if (i < k[0] and k[1] < spaceleft): #toimii kertymatodennakoisyydella
	#			print k[1]
				return k[1]
	#print 0.25
	return 0.25 #can't be too big, yes?
def getBar():
	bars = [4, 4, 3]
	return random.choice(bars)
